We performed Rabin-Karp randomized string matching algorithm on a set of strings of various sizes and with different number of unique characters. We performed experiments with 3 batches. For each batch, we fixed the size of the haystack and the needle. Then we generated multiple sets in each batch where each set numbered 'i' contained the first 'i' characters of the alphabet ('a' - 'z'). We then generated a set of primes. We used all primes less than 100 and all primes in the range 2100 - 2200. Between 100 and 2100, we used every 10th prime. The base while running the Rabin-Karp algorithm for any set was 26 and the alphabet 'a' had a value of 1, 'b' a value of 2 and so on. 
Let us define the smallest prime that gives similar timing performance as a large prime as the 'tipping point'.
The first set had haystack length of 100000 and needles of size 50000. In this set, we found that the tipping point was somewhere in the range of 15 to 60. It varied based on the number of unique characters in the string. The more the number of unique characters, the higher the tipping point. 
In the second set, the haystack had a length of 1000000 and the needles were of length 100000. We carried out this experiments only for up to 8 unique characters. The tipping point was in the range of 75-100 consistently till the 8th set. We also did an experiement with 26 unique characters and the tipping point was around 125. This made it clear that the tipping point increased as the number of unique characters in the haystack increased. 
For the third set, the haystack was set at 1000000, but the length of each needle was now 500000. The tipping point increased in this case to somewhere in the range of 450 to 625 based on the number of unique characters. Here again, we had 8 sets of data. 
So, we saw that the tipping point was a function of a number of factors such as the length of the needles, the haystack and the number of unique characters in the haystack and needles. 
